kind: VirtualService
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: loadbalacingtickets  # "just" a name for this virtualservice
  namespace: default
spec:
  hosts:
    - tickets-srv.default.svc.cluster.local  # The Service DNS (ie the regular K8S Service) name that we're applying routing rules to.
  http:
    - route:
        - destination:
            host: tickets-srv.default.svc.cluster.local # The Target DNS name
            subset: safe-group  # The name defined in the DestinationRule
          weight: 50
        - destination:
            host: tickets-srv.default.svc.cluster.local # The Target DNS name
            subset: risky-group  # The name defined in the DestinationRule
          weight: 50
---
kind: VirtualService
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: loadbalancingspa  # "just" a name for this virtualservice
  namespace: default
spec:
  hosts:
    - spafolio-srv.default.svc.cluster.local  # The Service DNS (ie the regular K8S Service) name that we're applying routing rules to.
  http:     
  
  - route:
        - destination:
            host: spafolio-srv.default.svc.cluster.local # The Target DNS name
            subset: v1  # The name defined in the DestinationRule
          weight: 90
        - destination:
            host: spafolio-srv.default.svc.cluster.local # The Target DNS name
            subset: v2 # The name defined in the DestinationRule
          weight: 10
---

kind: DestinationRule       # Defining which pods should be part of each subset
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: grouping-rules-for-our-ticket-release # This can be anything you like.
  namespace: default
spec:
  host: tickets-srv # Service
  subsets:
    - labels:   # SELECTOR.
        version: safe # find pods with label "safe"
      name: safe-group
    - labels:
        version: risky
      name: risky-group

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: faultinjection-customerfolio
spec:
  hosts:
  - customer-srv
  http:
  - fault:
      delay:
        percentage:
          value: 100
        fixedDelay: 10s
    route:
    - destination:
        host: customer-srv
    timeout: 5s


 
---

kind: DestinationRule       # Defining which pods should be part of each subset
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: grouping-rules-for-our-spa-release # This can be anything you like.
  namespace: default
spec:
  host: spafolio-srv # Service
  trafficPolicy:
    connectionPool:
      http:
        http1MaxPendingRequests: 1
        maxRequestsPerConnection: 1
    outlierDetection:
      maxEjectionPercent: 100
      consecutive5xxErrors: 2
      interval: 10s
      baseEjectionTime: 30s
  subsets:
  - name: v1
    labels:
      version: v1
  - name: v2
    labels:
      version: v2
